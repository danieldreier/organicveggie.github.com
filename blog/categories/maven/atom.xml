<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Maven | Blind Squirrel]]></title>
  <link href="http://blog.bealetech.com/blog/categories/maven/atom.xml" rel="self"/>
  <link href="http://blog.bealetech.com/"/>
  <updated>2013-05-04T19:15:31-07:00</updated>
  <id>http://blog.bealetech.com/</id>
  <author>
    <name><![CDATA[Sean Laurent]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pushing to Maven Central with Sonatype]]></title>
    <link href="http://blog.bealetech.com/blog/2013/04/10/pushing-to-maven-central-with-sonatype/"/>
    <updated>2013-04-10T15:07:00-07:00</updated>
    <id>http://blog.bealetech.com/blog/2013/04/10/pushing-to-maven-central-with-sonatype</id>
    <content type="html"><![CDATA[<p>Getting your opensource JAR published to Maven Central is free, but requires a little bit of up front work. I use <a href="https://sonatype.org">Sonatype</a> to help publish the jars for <a href="https://github.com/organicveggie/metrics-statsd">metrics-statsd</a>, which makes life much easier.
Most of the process is documented by Sonatype, which you can read about here:</p>

<p><a href="https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide">https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide</a></p>

<p>There were a few tricky parts that either weren't documented well or I just found confusing. I have tried to document some of these parts below.</p>

<!-- more -->


<h1>Terminology</h1>

<p>In case you're as easily confused as I was, Sonatype uses three different terms when talking about pushing jars:</p>

<ol>
<li><strong>Deploy</strong> refers to deploying <em>snapshots</em> to Sonatype.</li>
<li><strong>Staging</strong> refers to pushing potential release artifacts to Sonatype. Note that <em>staging</em> an artifact does not automatically push it to Maven Central.</li>
<li><strong>Release</strong> refers to marking the artifacts for release on Sonatype's Nexus server so that they get pushed to Maven Central.</li>
</ol>


<h1>Required Changes</h1>

<h2>Artifacts</h2>

<p>Pushing jars to Maven Central requires that you produce three artifacts:</p>

<ol>
<li>Main jar with compiled classes</li>
<li>Sources jar</li>
<li>Javadocs jar</li>
</ol>


<p>To automatically generate the second and third artifacts, add the following to the build plugins section of your <code>pom.xml</code>:</p>

<p>```xml
<plugin></p>

<pre><code>&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
&lt;artifactId&gt;maven-source-plugin&lt;/artifactId&gt;
&lt;version&gt;2.1.2&lt;/version&gt;
&lt;executions&gt;
    &lt;execution&gt;
        &lt;id&gt;attach-sources&lt;/id&gt;
        &lt;goals&gt;
            &lt;goal&gt;jar&lt;/goal&gt;
        &lt;/goals&gt;
    &lt;/execution&gt;
&lt;/executions&gt;
</code></pre>

<p></plugin>
<plugin></p>

<pre><code>&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
&lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;
&lt;version&gt;2.8.1&lt;/version&gt;
&lt;executions&gt;
    &lt;execution&gt;
        &lt;id&gt;attach-javadocs&lt;/id&gt;
        &lt;goals&gt;
            &lt;goal&gt;jar&lt;/goal&gt;
        &lt;/goals&gt;
    &lt;/execution&gt;
&lt;/executions&gt;
</code></pre>

<p></plugin>
```</p>

<h2>Artifact Signing</h2>

<p>Maven Central requires that you sign your released artifacts with GPG. Note that <em>snapshots</em> do not need to be signed. Sonatype has a thorough article on signing your artifacts:</p>

<p><a href="https://docs.sonatype.org/display/Repository/How+To+Generate+PGP+Signatures+With+Maven">How to Generate PGP Signatures With Maven</a></p>

<p>The key steps are:</p>

<ol>
<li>Generate a key pair</li>
<li>Distribute your public key</li>
<li>Update your <code>pom.xml</code></li>
</ol>


<p>The first two steps are straightforward. The only trick with the third step is that you <em>only</em> want to sign artifacts during the release process. If you add the <code>maven-gpg-plugin</code> to your main, every single build will get signed and Maven will prompt you for your passphrase with every build. Instead, you can define a Maven profile with a specific name and include the <code>maven-gpg-plugin</code> there.</p>

<p>```xml
<profiles>
  <profile></p>

<pre><code>&lt;id&gt;release-sign-artifacts&lt;/id&gt;
&lt;activation&gt;
  &lt;property&gt;
    &lt;name&gt;performRelease&lt;/name&gt;
    &lt;value&gt;true&lt;/value&gt;
  &lt;/property&gt;
&lt;/activation&gt;
&lt;build&gt;
  &lt;plugins&gt;
    &lt;plugin&gt;
      &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
      &lt;artifactId&gt;maven-gpg-plugin&lt;/artifactId&gt;
      &lt;version&gt;1.1&lt;/version&gt;
      &lt;executions&gt;
        &lt;execution&gt;
          &lt;id&gt;sign-artifacts&lt;/id&gt;
          &lt;phase&gt;verify&lt;/phase&gt;
          &lt;goals&gt;
            &lt;goal&gt;sign&lt;/goal&gt;
          &lt;/goals&gt;
        &lt;/execution&gt;
      &lt;/executions&gt;
    &lt;/plugin&gt;
  &lt;/plugins&gt;
&lt;/build&gt;
</code></pre>

<p>  </profile>
</profiles>
```</p>

<h2>distributionManagement</h2>

<p>Following the recommendation from Sonatype, you will remove the <code>&lt;repositories&gt;&lt;/repositories&gt;</code> section of your <code>pom.xml</code>. Once you do that, Maven no longer knows what server to use when <em>deploying</em> or <em>staging</em>. To compensate, you need to add a <code>distributionManagement</code> section:</p>

<p>```xml</p>

<pre><code>&lt;distributionManagement&gt;
    &lt;snapshotRepository&gt;
        &lt;id&gt;sonatype-nexus-snapshots&lt;/id&gt;
        &lt;url&gt;https://oss.sonatype.org/content/repositories/snapshots/&lt;/url&gt;
    &lt;/snapshotRepository&gt;
    &lt;repository&gt;
        &lt;id&gt;sonatype-nexus-staging&lt;/id&gt;
        &lt;url&gt;https://oss.sonatype.org/service/local/staging/deploy/maven2/&lt;/url&gt;
    &lt;/repository&gt;
&lt;/distributionManagement&gt;
</code></pre>

<p>```</p>

<h2>Sonatype Parent POM</h2>

<p>You need to configure your <code>pom.xml</code> to inherit from the Sonatype Parent POM:</p>

<p>```xml
<parent></p>

<pre><code>&lt;groupId&gt;org.sonatype.oss&lt;/groupId&gt;
&lt;artifactId&gt;oss-parent&lt;/artifactId&gt;
&lt;version&gt;7&lt;/version&gt;
</code></pre>

<p></parent>
```</p>

<h1>Deploying</h1>

<p>Assuming you've followed the instructions from Sonatype and setup an account, you're now ready to deploy snapshots. The process is simple:</p>

<p><code>bash
mvn clean deploy
</code></p>

<p>That will automatically clean, build and push your snapshot to Sonatype.</p>

<h1>Releasing</h1>

<p>Pushing a release jar to Maven Central consists of two parts: staging and releasing.</p>

<h2>Staging</h2>

<p>In this part we clean everything up; prepare for the build by creating a tag for the release and updating the pom.xml; perform the build; deploy the artifacts to Sonatype.</p>

<p>The process consists of three commands:</p>

<p><code>bash
mvn release:clean
mvn release:prepare
mvn release:perform
</code></p>

<p>The <code>release:prepare</code> step will prompt you for release information. Here is some sample output from the 2.3.0 release of <a href="https://github.com/organicveggie/metrics-statsd">metrics-statsd</a>:</p>

<p><code>bash
$ mvn release:prepare
[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building Metrics Statsd Support 2.3.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO]
[INFO] --- maven-release-plugin:2.2.1:prepare (default-cli) @ metrics-statsd ---
[INFO] Verifying that there are no local modifications...
[INFO]   ignoring changes on: pom.xml.next, release.properties, pom.xml.releaseBackup, pom.xml.backup, pom.xml.branch, pom.xml.tag
[INFO] Executing: /bin/sh -c cd /Users/sean/src/metrics-statsd &amp;&amp; git status
[INFO] Working directory: /Users/sean/src/metrics-statsd
[INFO] Checking dependencies and plugins for snapshots ...
What is the release version for "Metrics Statsd Support"? (com.bealetech:metrics-statsd) 2.3.0: :
What is SCM release tag or label for "Metrics Statsd Support"? (com.bealetech:metrics-statsd) v2.3.0: :
What is the new development version for "Metrics Statsd Support"? (com.bealetech:metrics-statsd) 2.3.1-SNAPSHOT: :
</code></p>

<h2>Releasing</h2>

<p>Once the artifacts are staged on Sonatype's Nexus, you need to go through a few annoying steps:</p>

<ul>
<li>Close out the staging release in Sonatype</li>
<li>Release the artifacts in Sonatype</li>
</ul>


<p>That process is well documented (with images) by Sonatype:</p>

<p><a href="https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-8a.ReleaseIt">https://docs.sonatype.org/display/Repository/Sonatype+OSS+Maven+Repository+Usage+Guide#SonatypeOSSMavenRepositoryUsageGuide-8a.ReleaseIt</a></p>

<p>Within two hours, Sonatype will push the artifacts to Maven Centrl.</p>
]]></content>
  </entry>
  
</feed>
